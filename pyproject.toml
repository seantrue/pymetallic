# pyproject.toml
# Modern Python packaging configuration

[project]
name = "pymetallic"
version = "0.1.1"
description = "Python bindings for Apple Metal using swift-cffi"
readme = "README.md"
authors = [
    { name = "Sean D. True" }
]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["metal", "gpu", "compute", "macos", "apple", "opencl"]
requires-python = ">=3.10"
dependencies = [
    "numpy>=2.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black>=22.0",
    "mypy>=0.950",
    "isort>=5.0",
    "pillow>=11.3.0",
    "licensecheck>=2025.1.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=3.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]

[project.urls]
Homepage = "https://github.com/seantrue/pymetallic"
Documentation = "https://pymetallic.readthedocs.io/"
Repository = "https://github.com/seantrue/pymetallic.git"
"Bug Tracker" = "https://github.com/seantrue/pymetallic/issues"

[project.scripts]
metallic-demo = "pymetallic.scripts.demo:main"
metallic-smoke = "pymetallic.scripts.smoke:main"

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
#[build-system]
#requires = ["hatchling>=1.13"]
#build-backend = "hatchling.build"
[build-system]
requires = ["uv_build>=0.8.15,<0.9.0"]
build-backend = "uv_build"

[tool.hatch.build.targets.wheel]
# Include both a single-module layout (pymetallic.py) and a package layout (pymetallic/)
# so either structure is packaged correctly without setuptools.
artifacts = ["*.dylib"]
exclude = ["*.gif"]
include = [
    "pymetallic"
]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.cibuildwheel]
before-all = "uname -a"